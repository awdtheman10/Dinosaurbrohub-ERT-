local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/Loco-CTO/UI-Library/main/VisionLibV2/source.lua'))()
local Window = Library:Create({
	Name = "Dinosaurbrohub V2", -- String
	Footer = "By awdtheman10", -- String
	ToggleKey = Enum.KeyCode.RightShift, -- Enum.KeyCode
	LoadedCallback = function()
		-- Function
	end,

	KeySystem = false, -- Boolean
	Key = "keyabc123", -- String
	MaxAttempts = 5, -- Integer
	DiscordLink = nil, -- String (Set it to nil if you do not have one, the button will not pop out)
	ToggledRelativeYOffset = 5 -- Number (Y Offset from bottom of your screen. Set it to nil if you want it to be centred)
})
local Tab = Window:Tab({
	Name = "Main", -- String
	Icon = "rbxassetid://11396131982", -- String
	Color = Color3.new(1, 0, 0) -- Color3
})
local Tab4 = Window:Tab({
	Name = "Misc", -- String
	Icon = "rbxassetid://11396131982", -- String
	Color = Color3.new(1, 0, 0) -- Color3
})
local Tab2 = Window:Tab({
	Name = "Player", -- String
	Icon = "rbxassetid://11396131982", -- String
	Color = Color3.new(1, 0, 0) -- Color3
})
local Tab3 = Window:Tab({
	Name = "Antis", -- String
	Icon = "rbxassetid://11396131982", -- String
	Color = Color3.new(1, 0, 0) -- Color3
})
local Tab5 = Window:Tab({
	Name = "Farming", -- String
	Icon = "rbxassetid://11396131982", -- String
	Color = Color3.new(1, 0, 0) -- Color3
})

local Section = Tab:Section({
	Name = "Main" -- String
})
local Section2 = Tab3:Section({
	Name = "Main" -- String
})
local Section3 = Tab2:Section({
	Name = "Main" -- String
})
local Section4 = Tab4:Section({
	Name = "Main" -- String
})
local Section5 = Tab5:Section({
	Name = "Main" -- String
})
local autoCornsEnabled = false  

function moveToNextCorn()
    local candyCornsFolder = game.Workspace:FindFirstChild("CandyCorns")
    if candyCornsFolder then
        for _, candy in pairs(candyCornsFolder:GetDescendants()) do
            if candy:IsA("Model") or candy:IsA("BasePart") then
              
                candy.Touched:Connect(function(hit)
                    local player = game.Players.LocalPlayer
                    local character = player.Character
                    if character and hit:IsDescendantOf(character) then
                        
                        moveToNextCorn()
                    end
                end)

                
                local player = game.Players.LocalPlayer
                local character = player.Character
                if character then
                    local rootPart = character:FindFirstChild("HumanoidRootPart")
                    if rootPart then
                        rootPart.CFrame = candy.CFrame
                    end
                end
                
                return 
            end
        end
    end
end

function toggleAutoCorns(state)
    autoCornsEnabled = state  
    if autoCornsEnabled then
        -- Start auto corn farming
        spawn(function()  
            while autoCornsEnabled do
                moveToNextCorn()  
                wait(0.1)  
                if not autoCornsEnabled then  
                    break
                end
            end
        end)
    end
end


local Toggle = Section:Toggle({
    Name = "Auto Corns (HALLOWEEN)", -- String
    Default = false, -- Boolean
    Callback = function(state)
        toggleAutoCorns(state) 
    end
})



local Button = Section:Button({
	Name = "Safe zone", -- String
	Callback = function()
  local safezone =  Instance.new("Part", workspace)
  safezone.Name = "Safezone"
  safezone.CFrame = CFrame.new(10000, 995, 10000)
  safezone.Size = Vector3.new(750, 2, 750)
  safezone.Transparency = 0.15
  safezone.Anchored = true
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(10000, 1000, 10000)-- The function that takes place when the button is pressed
	end
})
local Dropdown = Section:Dropdown({
    Name = "Players", -- String
    Items = {'', ' '}, -- Table
    Callback = function(item)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[item].Character.HumanoidRootPart.CFrame
    end
})

local Button = Section:Button({
    Name = "Refresh Player List", -- String
    Callback = function()
        local players1 = {}
        for _, player in pairs(game.Players:GetPlayers()) do 
            table.insert(players1, player.Name)
        end
        
        table.insert(players1, nil)
        table.insert(players1, nil)
        table.insert(players1, nil)
        table.insert(players1, nil)
        
        Dropdown:UpdateList({
            Items = players1,
            Replace = true
        }) 
    end
})

local Toggle = Section2:Toggle({
	Name = "anti void", -- String
	Default = false, -- Boolean
	Callback = function(noVoid)
		if noVoid == true then
                for i,v in pairs(game.Workspace:GetDescendants()) do
                    if v.Name == "dedBarrier"  or v.Name == "ArenaBarrier" or v.Name == "DEATHBARRIER" or v.Name == "DEATHBARRIER2" then               
                        v.CanCollide = true
                        v.Material = "SmoothPlastic"
                        v.Color = Color3.new(1,1,1)
                        v.Transparency = 1
                    end  
                end 
            else
                for i,v in pairs(game.Workspace:GetDescendants()) do
                    if v.Name == "dedBarrier"  or v.Name == "ArenaBarrier" or v.Name == "DEATHBARRIER" or v.Name == "DEATHBARRIER2" then               
                        v.CanCollide = false
                        v.Transparency = 1
                    end  
                end
            end end
	
})



local Button = Section:Button({
	Name = "Spawn Null", -- String
	Callback = function()
		 game:GetService("ReplicatedStorage").NullAbility:FireServer()
	end
})

local Button = Section5:Button({
	Name = "Get trap", -- String
	Callback = function()
		if game.Players.LocalPlayer.leaderstats.Glove.Value == "Brick" then
for i = 1, 200 do
game:GetService("ReplicatedStorage").lbrick:FireServer()
game.Players.LocalPlayer.PlayerGui.BRICKCOUNT.ImageLabel.TextLabel.Text = game.Players.LocalPlayer.PlayerGui.BRICKCOUNT.ImageLabel.TextLabel.Text + 1;
wait(Random.new():NextNumber(1.5,1.75))
game:GetService("ReplicatedStorage").lbrick:FireServer()
game.Players.LocalPlayer.PlayerGui.BRICKCOUNT.ImageLabel.TextLabel.Text = game.Players.LocalPlayer.PlayerGui.BRICKCOUNT.ImageLabel.TextLabel.Text + 1;
wait(Random.new():NextNumber(1.5,1.75))
game:GetService("ReplicatedStorage").lbrick:FireServer()
game.Players.LocalPlayer.PlayerGui.BRICKCOUNT.ImageLabel.TextLabel.Text = game.Players.LocalPlayer.PlayerGui.BRICKCOUNT.ImageLabel.TextLabel.Text + 1;
wait(Random.new():NextNumber(1.5,1.75))
game:GetService("ReplicatedStorage").lbrick:FireServer()
game.Players.LocalPlayer.PlayerGui.BRICKCOUNT.ImageLabel.TextLabel.Text = game.Players.LocalPlayer.PlayerGui.BRICKCOUNT.ImageLabel.TextLabel.Text + 1;
wait(Random.new():NextNumber(1.5,1.75))
game:GetService('VirtualInputManager'):SendKeyEvent(true,'E',false,x)
wait(Random.new():NextNumber(1.5,1.75))
        end
else
Library:Notify({
	Name = " ", -- String
	Text = "Equip the Brick glove to do this action.", -- String
	Icon = "rbxassetid://11401835376", -- String
	Sound = "rbxassetid://6647898215", -- String
	Duration = 10, -- Integer
    Callback = function()
        warn('blud is not sneaky')
    end
})
end

	end
})


local Toggle = Section:Toggle({
	Name = "Rhythm Spam", -- String
	Default = false, -- Boolean
	Callback = function(Value)
		RhythmSpam = Value
while RhythmSpam do
game:GetService("ReplicatedStorage").rhythmevent:FireServer("AoeExplosion",0)
wait()
end
	end
})



local Toggle = Section4:Toggle({
	Name = "Free slaps (ARENA ONLY)", -- String
	Default = false, -- Boolean
	Callback = function(Value)
		 SlappleFarm = Value
while SlappleFarm do
for i, v in ipairs(workspace.Arena.island5.Slapples:GetDescendants()) do
                if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and game.Players.LocalPlayer.Character:FindFirstChild("entered") and v.Name == "Glove" and v:FindFirstChildWhichIsA("TouchTransmitter") then
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0)
        firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 1)
                end
            end
wait()
end
	end
})

local Toggle = Section2:Toggle({
	Name = "Anti Reaper", -- String
	Default = false, -- Boolean
	Callback = function(Value)
AntiReaper = Value
            while AntiReaper do
for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                    if v.Name == "DeathMark" then
                        game:GetService("ReplicatedStorage").ReaperGone:FireServer(v)
                    game:GetService("Lighting"):WaitForChild("DeathMarkColorCorrection"):Destroy() 
                    end
                end
task.wait()
end
	end
})
local Slider = Section3:Slider({
	Name = "Walkspeed", -- String
	Max = 85, -- Integer
	Min = 16, -- Integer
	Default = 16, -- Integer
	Callback = function(Value)
    		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
  	end
})

local Slider = Section3:Slider({
	Name = "Jump power", -- String
	Max = 155, -- Integer
	Min = 50, -- Integer
	Default = 50, -- Integer
	Callback = function(Value)
    		game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
  	end
})

local Button = Section:Button({
	Name = "Inf Invis (666+ slaps)", -- String
	Callback = function()
		if game.Players.LocalPlayer.Character:FindFirstChild("entered") == nil and game.Players.LocalPlayer.leaderstats.Slaps.Value >= 666 then
OGlove = game.Players.LocalPlayer.leaderstats.Glove.Value
fireclickdetector(workspace.Lobby.Ghost.ClickDetector)
game.ReplicatedStorage.Ghostinvisibilityactivated:FireServer()
fireclickdetector(workspace.Lobby[OGlove].ClickDetector)
else
Library:Notify({
	Name = "ERROR", -- String
	Text = "You need 666+ slaps and to be in the lobby.", -- String
	Icon = "rbxassetid://11401835376", -- String
	Sound = "rbxassetid://3900067524", -- String

	Duration = 10,
})
end
	end
})
