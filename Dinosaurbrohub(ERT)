getgenv().SecureMode = true
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()



local Window = Rayfield:CreateWindow({
    Name = "Euphoria ragdoll testing",
    LoadingTitle = "ERT",
    LoadingSubtitle = "by Dinosaurbro",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = "Dino", -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = true, -- Set this to true to use our key system
    KeySettings = {
       Title = "Key System",
       Subtitle = "Key System",
       Note = "go to https://pastebin.com/4FrrqNgD for the key",
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"dinosaurbrohubontop"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }})

    local Tab = Window:CreateTab("Main", 4483362458) -- Title, Image
    local Button = Tab:CreateButton({
        Name = "free coins", "90-150 coins each time u press it! (you must have defibs out and ready!)",
        Callback = function()
            for _,troll in pairs(game.Players:GetPlayers()) do
                if troll.Name ~= game.Players.LocalPlayer.Name then
                game:GetService("Players").LocalPlayer.Character.Defibs.defibusing.punched:InvokeServer(troll.Character.Humanoid, troll.Character.HumanoidRootPart)
                end
                end -- The function that takes place when the button is pressed
        end,
     })
     local Button = Tab:CreateButton({
        Name = "Instant accessory weapon", "REJOIN FOR IT TO TAKE EFFECT",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(157.967, 104.991, -620.657)-- The function that takes place when the button is pressed
        end,
     })


     -- Assuming "toggleButton" is the UI element representing the toggle
local toggleState = false






 local Button = Tab:CreateButton({
   Name = "Destroy Humanoid",
   Callback = function()
       game.Players.LocalPlayer.Character.Humanoid:Destroy()
   end
})

local Button = Tab:CreateButton({
   Name = "Reset Humanoid (give a new humanoid)",
   Callback = function()
      game.Players.LocalPlayer.Character.Humanoid:Destroy()
      local player = game.Players.LocalPlayer -- Replace with the actual player reference

      -- Get the player's character
      local character = player.Character
      
      -- Check if the character exists
      if character then
          -- Create a new Humanoid
          local newHumanoid = Instance.new("Humanoid")
      
          -- Attach the new Humanoid to the character
          newHumanoid.Parent = character
      
          -- You can also set properties of the new Humanoid if needed
          newHumanoid.MaxHealth = 10000
          newHumanoid.Health = 10000
          -- Set other properties as needed
      
          print("New Humanoid added to the character.")
      else
          print("Player character doesn't exist.")
      end
         end
      })





local Slider = Tab:CreateSlider({
   Name = "Walkspeed",
   Range = {16, 1500},
   Increment = 0.1,
   Suffix = "Walkspeed",
   CurrentValue = 10,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   -- The function that takes place when the slider changes
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value-- The variable (Value) is a number which correlates to the value the slider is currently at
   end,
})



local Slider = Tab:CreateSlider({
   Name = "Gravity",
   Range = {-45, 600},
   Increment = 0.1,
   Suffix = "Gravity",
   CurrentValue = 10,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   -- The function that takes place when the slider changes
   game.Workspace.Gravity = Value-- The variable (Value) is a number which correlates to the value the slider is currently at
   end,
})




local YoutubeTab = Window:CreateTab("Youtuber Credits", 4483362458) -- Title, Image
local Section = YoutubeTab:CreateSection("No Youtubers YET.")




    local Button = Tab:CreateButton({
        Name = "free gamepass gui (GIB GUI)", 
        Callback = function()
game.Players.LocalPlayer.PlayerGui.GamePassGui["Gib out"].Visible = true
        end,
     })


    local Button = Tab:CreateButton({
        Name = "hide gib gui", 
        Callback = function()
game.Players.LocalPlayer.PlayerGui.GamePassGui["Gib out"].Visible = false
        end,
     })









    local Button = Tab:CreateButton({
        Name = "teleport to sans", 
        Callback = function()
local player = game.Players.LocalPlayer -- Change this to the actual player you're targeting
local desiredCFrame = CFrame.new(
    59.5509644, 103.131104, -550.967102,
    0.713351369, -0.479275048, -0.511297703,
    -5.02765179e-05, 0.729549587, -0.683927953,
    0.700806618, 0.487906635, 0.520401061
)

local character = player.Character
local humanoidRootPart = character:WaitForChild("HumanoidRootPart") -- Get the HumanoidRootPart

-- Set the CFrame of the HumanoidRootPart to the desired CFrame
humanoidRootPart.CFrame = desiredCFrame

        end,
     })





    local Button = Tab:CreateButton({
        Name = "teleport to a spawn", 
        Callback = function()
local player = game.Players.LocalPlayer -- Change this to the actual player you're targeting
local desiredCFrame = CFrame.new(
 -261.721466, 
 108.0439987, 
 -141.277496, 
 1,
 0, 
 0, 
 0, 
 1, 
 0, 
 0, 
 0, 
 1
)

local character = player.Character
local humanoidRootPart = character:WaitForChild("HumanoidRootPart") -- Get the HumanoidRootPart

-- Set the CFrame of the HumanoidRootPart to the desired CFrame
humanoidRootPart.CFrame = desiredCFrame








end})
